(await tokenCEP.balanceOf(swapContract.target)).toString();
await swapContract.swap(tokenCEP.target, swapAmount);
await swapContract.depositLiquidity(tokenCEP.target, depositAmount);
await swapContract.depositLiquidity(tokenCEP.target, ethers.parseUnits("100", 18));
(await tokenCEP.balanceOf(swapContract.target)).toString();
await swapContract.swap(tokenCEP.target, swapAmount);
(await tokenCEP.balanceOf(swapContract.target)).toString();
await swapContract.swap(tokenLNX.target, swapAmount);
(await tokenCEP.balanceOf(signer.address)).toString();
(await tokenLNX.balanceOf(signer.address)).toString();
await swapContract.swap(tokenLNX.target, swapAmount);
const swapAmount = ethers.parseUnits("10", 18);
(await swapContract.getPoolBalance(tokenCEP.target)).toString();
(await swapContract.getPoolBalance(tokenLNX.target)).toString();
await swapContract.depositLiquidity(tokenCEP.target, depositAmount);
await swapContract.depositLiquidity(tokenLNX.target, depositAmount);
const depositAmount = ethers.parseUnits("50", 18);
(await tokenCEP.allowance(signer.address, swapAddress)).toString();
(await tokenLNX.allowance(signer.address, swapAddress)).toString();
await tokenCEP.approve(swapAddress, approveAmount);
await tokenLNX.approve(swapAddress, approveAmount);
const approveAmount = ethers.parseUnits("100", 18); 
(await tokenCEP.balanceOf(signer.address)).toString();
(await tokenLNX.balanceOf(signer.address)).toString();
const swapContract = await ethers.getContractAt("SwapToken", swapAddress);
const tokenCEP = await ethers.getContractAt(  "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",  "0x1559368328F951a72da9B7571C6611667dfc72d2");
const tokenLNX = await ethers.getContractAt(  "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",  "0xD1e9eac1381B94421cBDAB76875d8086e7Def8D9");
const swapAddress = "0xc54743436C7B19777EC70d40f0A267B0C042C6a3";
const [signer] = await ethers.getSigners();
const tokenLNX = await ethers.getContractAt(  "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",  "0xD1e9eac1381B94421cBDAB76875d8086e7Def8D9");
const tokenLNX = await ethers.getContractAt("IERC20", "0xD1e9eac1381B94421cBDAB76875d8086e7Def8D9");
const swapAddress = "0xc54743436C7B19777EC70d40f0A267B0C042C6a3";
const [signer] = await ethers.getSigners();
await lnxTokenContract.approve(0xc29b56Ee994feC45133BDe469d64c37e847310b0, 1000);
const lnxTokenContract = new ethers.Contract(0xD1e9eac1381B94421cBDAB76875d8086e7Def8D9, ERC20_ABI, signer);
const lnxTokenContract = new ethers.Contract(lnxTokenAddress, ERC20_ABI, signer);